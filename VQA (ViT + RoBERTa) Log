{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2378855f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:21.311263Z",
     "iopub.status.busy": "2025-01-04T12:36:21.310824Z",
     "iopub.status.idle": "2025-01-04T12:36:48.207940Z",
     "shell.execute_reply": "2025-01-04T12:36:48.206962Z"
    },
    "papermill": {
     "duration": 26.90707,
     "end_time": "2025-01-04T12:36:48.209661",
     "exception": false,
     "start_time": "2025-01-04T12:36:21.302591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import random as rand\n",
    "import os\n",
    "\n",
    "from PIL import Image\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from sklearn.model_selection import train_test_split\n",
    "from torchvision import transforms\n",
    "from transformers import ViTModel, ViTImageProcessor\n",
    "from transformers import AutoTokenizer, RobertaModel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2e51757c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.219663Z",
     "iopub.status.busy": "2025-01-04T12:36:48.218965Z",
     "iopub.status.idle": "2025-01-04T12:36:48.226840Z",
     "shell.execute_reply": "2025-01-04T12:36:48.225983Z"
    },
    "papermill": {
     "duration": 0.013838,
     "end_time": "2025-01-04T12:36:48.228006",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.214168",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Code ran successfully\n"
     ]
    }
   ],
   "source": [
    "def set_seed(seed):\n",
    "  rand.seed(seed)\n",
    "  np.random.seed(seed)\n",
    "  torch.cuda.manual_seed(seed)\n",
    "  torch.cuda.manual_seed_all(seed)\n",
    "  torch.backends.cudnn.deterministic = True\n",
    "  torch.backends.cudnn.benchmark = False\n",
    "\n",
    "seed = 59\n",
    "set_seed(59)\n",
    "print(\"Code ran successfully\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "dbf53624",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.236528Z",
     "iopub.status.busy": "2025-01-04T12:36:48.236323Z",
     "iopub.status.idle": "2025-01-04T12:36:48.260997Z",
     "shell.execute_reply": "2025-01-04T12:36:48.260320Z"
    },
    "papermill": {
     "duration": 0.030203,
     "end_time": "2025-01-04T12:36:48.262156",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.231953",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['COCO_val2014_000000393225.jpg#0\\tIs this a creamy soup ? no\\n', 'COCO_val2014_000000393243.jpg#0\\tIs this person wearing a tie ? no\\n', 'COCO_val2014_000000262197.jpg#0\\tIs this a hospital ? yes\\n', 'COCO_val2014_000000393277.jpg#0\\tAre there any tour buses ? no\\n', 'COCO_val2014_000000393277.jpg#1\\tIs this a one way street ? no\\n']\n"
     ]
    }
   ],
   "source": [
    "data = open('/kaggle/input/vqa-set/vaq2.0.TrainImages.txt', 'r')\n",
    "lines = data.readlines()\n",
    "print(lines[:5])  # Print the first 5 lines"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c81634f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.270843Z",
     "iopub.status.busy": "2025-01-04T12:36:48.270614Z",
     "iopub.status.idle": "2025-01-04T12:36:48.296850Z",
     "shell.execute_reply": "2025-01-04T12:36:48.296038Z"
    },
    "papermill": {
     "duration": 0.031844,
     "end_time": "2025-01-04T12:36:48.298012",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.266168",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Full sentence:  ['COCO_val2014_000000393225.jpg#0', 'Is this a creamy soup ? no\\n']\n",
      "Image Path:  COCO_val2014_000000393225.jpg\n",
      "Question:  Is this a creamy soup \n",
      "Answer:  no\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000393243.jpg#0', 'Is this person wearing a tie ? no\\n']\n",
      "Image Path:  COCO_val2014_000000393243.jpg\n",
      "Question:  Is this person wearing a tie \n",
      "Answer:  no\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000262197.jpg#0', 'Is this a hospital ? yes\\n']\n",
      "Image Path:  COCO_val2014_000000262197.jpg\n",
      "Question:  Is this a hospital \n",
      "Answer:  yes\n",
      " \n"
     ]
    }
   ],
   "source": [
    "# Load train data\n",
    "train_data = []\n",
    "train_path = '/kaggle/input/vqa-set/vaq2.0.TrainImages.txt'\n",
    "with open(train_path, 'r') as f:\n",
    "    for i, line in enumerate(f.readlines()):\n",
    "        \n",
    "        full_sentence = line.split('\\t')\n",
    "        if (i < 3):\n",
    "            print(\"Full sentence: \", full_sentence)\n",
    "        \n",
    "        img_path = full_sentence[0][:-2]\n",
    "        if (i < 3):\n",
    "            print(\"Image Path: \", img_path)\n",
    "        \n",
    "        qa = full_sentence[1].split('?')\n",
    "        \n",
    "        question = qa[0]\n",
    "        if (i < 3):\n",
    "            print(\"Question: \", question)\n",
    "\n",
    "        # Error handling in case\n",
    "        if len(qa) == 3:\n",
    "            answer = qa[2]\n",
    "        else:\n",
    "            answer = qa[1]\n",
    "        \n",
    "        # Remove any trailing newline characters or extra spaces from the answer\n",
    "        answer = answer.strip()\n",
    "        \n",
    "        if (i < 3):\n",
    "            print(\"Answer: \", answer)\n",
    "            \n",
    "        if (i < 3):\n",
    "            print(\" \")\n",
    "            \n",
    "        data_sample = {\n",
    "            'Image Path': img_path,\n",
    "            'Question': question + '?',\n",
    "            'Answer': answer  # No trailing newline\n",
    "        }\n",
    "        train_data.append(data_sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "db24a1f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.306776Z",
     "iopub.status.busy": "2025-01-04T12:36:48.306562Z",
     "iopub.status.idle": "2025-01-04T12:36:48.332577Z",
     "shell.execute_reply": "2025-01-04T12:36:48.331797Z"
    },
    "papermill": {
     "duration": 0.03163,
     "end_time": "2025-01-04T12:36:48.333765",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.302135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Full sentence:  ['COCO_val2014_000000262175.jpg#0', 'Is this a designer tie ? no\\n']\n",
      "Image Path:  COCO_val2014_000000262175.jpg\n",
      "Question:  Is this a designer tie \n",
      "Answer:  no\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000393284.jpg#1', 'Is this man snowboarding ? yes\\n']\n",
      "Image Path:  COCO_val2014_000000393284.jpg\n",
      "Question:  Is this man snowboarding \n",
      "Answer:  yes\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000000133.jpg#0', 'Is this a child room ? yes\\n']\n",
      "Image Path:  COCO_val2014_000000000133.jpg\n",
      "Question:  Is this a child room \n",
      "Answer:  yes\n",
      " \n"
     ]
    }
   ],
   "source": [
    "# Load val data\n",
    "val_data = []\n",
    "val_path = '/kaggle/input/vqa-set/vaq2.0.DevImages.txt'\n",
    "with open(val_path, 'r') as f:\n",
    "    for i, line in enumerate(f.readlines()):\n",
    "        \n",
    "        full_sentence = line.split('\\t')\n",
    "        if (i < 3):\n",
    "            print(\"Full sentence: \", full_sentence)\n",
    "        \n",
    "        img_path = full_sentence[0][:-2]\n",
    "        if (i < 3):\n",
    "            print(\"Image Path: \", img_path)\n",
    "        \n",
    "        qa = full_sentence[1].split('?')\n",
    "        \n",
    "        question = qa[0]\n",
    "        if (i < 3):\n",
    "            print(\"Question: \", question)\n",
    "\n",
    "        # Error handling in case\n",
    "        if len(qa) == 3:\n",
    "            answer = qa[2]\n",
    "        else:\n",
    "            answer = qa[1]\n",
    "        \n",
    "        # Remove any trailing newline characters or extra spaces from the answer\n",
    "        answer = answer.strip()\n",
    "        \n",
    "        if (i < 3):\n",
    "            print(\"Answer: \", answer)\n",
    "            \n",
    "        if (i < 3):\n",
    "            print(\" \")\n",
    "            \n",
    "        data_sample = {\n",
    "            'Image Path': img_path,\n",
    "            'Question': question + '?',\n",
    "            'Answer': answer  # No trailing newline\n",
    "        }\n",
    "        val_data.append(data_sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9720d7d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.342877Z",
     "iopub.status.busy": "2025-01-04T12:36:48.342638Z",
     "iopub.status.idle": "2025-01-04T12:36:48.367963Z",
     "shell.execute_reply": "2025-01-04T12:36:48.367097Z"
    },
    "papermill": {
     "duration": 0.03129,
     "end_time": "2025-01-04T12:36:48.369489",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.338199",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Full sentence:  ['COCO_val2014_000000262162.jpg#0', 'Are there any boxes in the room ? no\\n']\n",
      "Image Path:  COCO_val2014_000000262162.jpg\n",
      "Question:  Are there any boxes in the room \n",
      "Answer:  no\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000393277.jpg#0', 'Are there any any tour buses ? no\\n']\n",
      "Image Path:  COCO_val2014_000000393277.jpg\n",
      "Question:  Are there any any tour buses \n",
      "Answer:  no\n",
      " \n",
      "Full sentence:  ['COCO_val2014_000000393284.jpg#2', 'Is this person flying ? no\\n']\n",
      "Image Path:  COCO_val2014_000000393284.jpg\n",
      "Question:  Is this person flying \n",
      "Answer:  no\n",
      " \n"
     ]
    }
   ],
   "source": [
    "# Load train data\n",
    "test_data = []\n",
    "test_path = '/kaggle/input/vqa-set/vaq2.0.TestImages.txt'\n",
    "with open(test_path, 'r') as f:\n",
    "    for i, line in enumerate(f.readlines()):\n",
    "        \n",
    "        full_sentence = line.split('\\t')\n",
    "        if (i < 3):\n",
    "            print(\"Full sentence: \", full_sentence)\n",
    "        \n",
    "        img_path = full_sentence[0][:-2]\n",
    "        if (i < 3):\n",
    "            print(\"Image Path: \", img_path)\n",
    "        \n",
    "        qa = full_sentence[1].split('?')\n",
    "        \n",
    "        question = qa[0]\n",
    "        if (i < 3):\n",
    "            print(\"Question: \", question)\n",
    "\n",
    "        # Error handling in case\n",
    "        if len(qa) == 3:\n",
    "            answer = qa[2]\n",
    "        else:\n",
    "            answer = qa[1]\n",
    "        \n",
    "        # Remove any trailing newline characters or extra spaces from the answer\n",
    "        answer = answer.strip()\n",
    "        \n",
    "        if (i < 3):\n",
    "            print(\"Answer: \", answer)\n",
    "            \n",
    "        if (i < 3):\n",
    "            print(\" \")\n",
    "            \n",
    "        data_sample = {\n",
    "            'Image Path': img_path,\n",
    "            'Question': question + '?',\n",
    "            'Answer': answer  # No trailing newline\n",
    "        }\n",
    "        test_data.append(data_sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a9715b0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.379159Z",
     "iopub.status.busy": "2025-01-04T12:36:48.378891Z",
     "iopub.status.idle": "2025-01-04T12:36:48.386505Z",
     "shell.execute_reply": "2025-01-04T12:36:48.385754Z"
    },
    "papermill": {
     "duration": 0.013659,
     "end_time": "2025-01-04T12:36:48.387734",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.374075",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'yes': 0, 'no': 1}\n",
      "Keys:  dict_keys(['yes', 'no'])\n",
      "Values:  dict_values([0, 1])\n",
      "\n",
      "{0: 'yes', 1: 'no'}\n",
      "Keys:  dict_keys([0, 1])\n",
      "Values:  dict_values(['yes', 'no'])\n"
     ]
    }
   ],
   "source": [
    "# Get all classes\n",
    "classes = set([sample['Answer'] for sample in train_data])\n",
    "\n",
    "label2idx = {\n",
    "    cls_name: idx for idx, cls_name in enumerate(classes)\n",
    "}\n",
    "print(label2idx)\n",
    "print(\"Keys: \", label2idx.keys())\n",
    "print(\"Values: \", label2idx.values())\n",
    "\n",
    "print(\"\")\n",
    "\n",
    "idx2label = {\n",
    "    idx: cls_name for idx, cls_name in enumerate(classes)\n",
    "}\n",
    "print(idx2label)\n",
    "print(\"Keys: \", idx2label.keys())\n",
    "print(\"Values: \", idx2label.values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7f5d61a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.397170Z",
     "iopub.status.busy": "2025-01-04T12:36:48.396914Z",
     "iopub.status.idle": "2025-01-04T12:36:48.403664Z",
     "shell.execute_reply": "2025-01-04T12:36:48.402818Z"
    },
    "papermill": {
     "duration": 0.012642,
     "end_time": "2025-01-04T12:36:48.404842",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.392200",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class VQA_Dataset(Dataset):\n",
    "    def __init__(self, data, label2idx, img_feature_extractor, text_tokenizer,\n",
    "                device, transforms = None,\n",
    "                img_dir = '/kaggle/input/vqa-set/val2014-resised'):\n",
    "        self.data = data\n",
    "        self.img_dir = img_dir\n",
    "        self.label2idx = label2idx\n",
    "        self.img_encoder = img_feature_extractor\n",
    "        self.text_tokenizer = text_tokenizer\n",
    "        self.device = device\n",
    "        self.transforms = transforms\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.data)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        img_path = os.path.join(self.img_dir, self.data[idx]['Image Path'])\n",
    "        img = Image.open(img_path).convert('RGB')\n",
    "\n",
    "        if self.transforms:\n",
    "            img = self.transforms(img)\n",
    "\n",
    "        if self.img_encoder: # Image Encoder\n",
    "            img = self.img_encoder(images = img, return_tensors = 'pt')\n",
    "            img = {k: v.to(self.device).squeeze(0) for k, v in img.items()}\n",
    "        question = self.data[idx]['Question']\n",
    "        \n",
    "        if self.text_tokenizer: # Text Encoder\n",
    "            question = self.text_tokenizer(\n",
    "                question,\n",
    "                padding = \"max_length\",\n",
    "                max_length = 20,\n",
    "                truncation = True,\n",
    "                return_tensors = 'pt'\n",
    "            )\n",
    "            question = {k: v.to(self.device).squeeze(0) for k, v in question.items()}\n",
    "\n",
    "        label = self.data[idx]['Answer']\n",
    "        label = torch.tensor(\n",
    "            self.label2idx[label],\n",
    "            dtype = torch.long\n",
    "        ).to(self.device)\n",
    "        \n",
    "        # The Encoded Image and Question with Label (Binary)\n",
    "        sample = {\n",
    "            'image': img,\n",
    "            'question': question,\n",
    "            'label': label\n",
    "        }\n",
    "        return sample"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3dd9af09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.413700Z",
     "iopub.status.busy": "2025-01-04T12:36:48.413475Z",
     "iopub.status.idle": "2025-01-04T12:36:48.417350Z",
     "shell.execute_reply": "2025-01-04T12:36:48.416582Z"
    },
    "papermill": {
     "duration": 0.009564,
     "end_time": "2025-01-04T12:36:48.418514",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.408950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data_transform = transforms.Compose([\n",
    "    transforms.Resize(size = (224, 224)),\n",
    "    transforms.CenterCrop(size = 180),\n",
    "    transforms.ColorJitter(brightness = 0.1, contrast = 0.1, saturation = 0.1),\n",
    "    transforms.RandomHorizontalFlip(),\n",
    "    transforms.GaussianBlur(3),\n",
    "])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9e7fa899",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:48.427451Z",
     "iopub.status.busy": "2025-01-04T12:36:48.427225Z",
     "iopub.status.idle": "2025-01-04T12:36:52.166509Z",
     "shell.execute_reply": "2025-01-04T12:36:52.165459Z"
    },
    "papermill": {
     "duration": 3.745076,
     "end_time": "2025-01-04T12:36:52.167747",
     "exception": false,
     "start_time": "2025-01-04T12:36:48.422671",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "575267e6284f4bf59c1ae98fea672f70",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "preprocessor_config.json:   0%|          | 0.00/160 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "97faf708bede45228e33bd6f44f77b7a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/25.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4344d083f1544fb8bc866aa31a164fbb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/481 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2d5ddb5959b045d3bf54093c27fded46",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c1b6666d1f324ebc9b3413f3b2240e93",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3bf9a6a3582d456090729ac84ed8c55a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<__main__.VQA_Dataset object at 0x7f877d07ee60>\n",
      "<__main__.VQA_Dataset object at 0x7f877d07cd00>\n",
      "<__main__.VQA_Dataset object at 0x7f877d07e230>\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "img_encoder = ViTImageProcessor.from_pretrained(\"google/vit-base-patch16-224\")\n",
    "text_encoder = AutoTokenizer.from_pretrained('roberta-base')\n",
    "device = 'cuda' if torch.cuda.is_available() else 'cpu'\n",
    "train_set = VQA_Dataset(\n",
    "    train_data,\n",
    "    label2idx = label2idx,\n",
    "    img_feature_extractor = img_encoder,\n",
    "    text_tokenizer = text_encoder,\n",
    "    device = device,\n",
    "    transforms = data_transform\n",
    ")\n",
    "\n",
    "val_set = VQA_Dataset(\n",
    "    val_data,\n",
    "    label2idx = label2idx,\n",
    "    img_feature_extractor = img_encoder,\n",
    "    text_tokenizer = text_encoder,\n",
    "    device = device\n",
    ")\n",
    "\n",
    "\n",
    "test_set = VQA_Dataset(\n",
    "    test_data,\n",
    "    label2idx = label2idx,\n",
    "    img_feature_extractor = img_encoder,\n",
    "    text_tokenizer = text_encoder,\n",
    "    device = device\n",
    ")\n",
    "\n",
    "print(train_set)\n",
    "print(val_set)\n",
    "print(test_set)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cf58aa01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.178952Z",
     "iopub.status.busy": "2025-01-04T12:36:52.178701Z",
     "iopub.status.idle": "2025-01-04T12:36:52.184062Z",
     "shell.execute_reply": "2025-01-04T12:36:52.183288Z"
    },
    "papermill": {
     "duration": 0.012016,
     "end_time": "2025-01-04T12:36:52.185341",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.173325",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<torch.utils.data.dataloader.DataLoader object at 0x7f8665a41540>\n",
      "<torch.utils.data.dataloader.DataLoader object at 0x7f8665a42890>\n",
      "<torch.utils.data.dataloader.DataLoader object at 0x7f8665a42a40>\n"
     ]
    }
   ],
   "source": [
    "train_batch = 256\n",
    "test_batch = 32\n",
    "\n",
    "train_loader = DataLoader(\n",
    "    train_set,\n",
    "    batch_size = train_batch,\n",
    "    shuffle = True\n",
    ")\n",
    "\n",
    "val_loader = DataLoader(\n",
    "    val_set,\n",
    "    batch_size = test_batch,\n",
    "    shuffle = False\n",
    ")\n",
    "\n",
    "test_loader = DataLoader(\n",
    "    test_set,\n",
    "    batch_size = test_batch,\n",
    "    shuffle = False\n",
    ")\n",
    "print(train_loader)\n",
    "print(val_loader)\n",
    "print(test_loader)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "393de10f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.195759Z",
     "iopub.status.busy": "2025-01-04T12:36:52.195516Z",
     "iopub.status.idle": "2025-01-04T12:36:52.199256Z",
     "shell.execute_reply": "2025-01-04T12:36:52.198598Z"
    },
    "papermill": {
     "duration": 0.01027,
     "end_time": "2025-01-04T12:36:52.200454",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.190184",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class TextEncoder(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(TextEncoder, self).__init__()\n",
    "        self.model = RobertaModel.from_pretrained('roberta-base')\n",
    "\n",
    "    def forward(self, x):\n",
    "        out = self.model(**x)\n",
    "        return out.pooler_output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ec663d63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.210843Z",
     "iopub.status.busy": "2025-01-04T12:36:52.210615Z",
     "iopub.status.idle": "2025-01-04T12:36:52.214311Z",
     "shell.execute_reply": "2025-01-04T12:36:52.213645Z"
    },
    "papermill": {
     "duration": 0.010265,
     "end_time": "2025-01-04T12:36:52.215584",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.205319",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class VisualEncoder(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(VisualEncoder, self).__init__()\n",
    "        self.model = ViTModel.from_pretrained(\"google/vit-base-patch16-224\")\n",
    "\n",
    "    def forward(self, x):\n",
    "        out = self.model(**x)\n",
    "        return out.pooler_output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5479d33f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.226137Z",
     "iopub.status.busy": "2025-01-04T12:36:52.225892Z",
     "iopub.status.idle": "2025-01-04T12:36:52.231049Z",
     "shell.execute_reply": "2025-01-04T12:36:52.230429Z"
    },
    "papermill": {
     "duration": 0.011825,
     "end_time": "2025-01-04T12:36:52.232211",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.220386",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class Classifier(nn.Module):\n",
    "    def __init__(self, hidden_size=512, dropout_prob = .2, n_classes = 2):\n",
    "        super(Classifier, self).__init__()\n",
    "        self.fc1 = nn.Linear(768*2, hidden_size)\n",
    "        self.dropout = nn.Dropout(dropout_prob)\n",
    "        self.gelu = nn.GELU()\n",
    "        self.fc2 = nn.Linear(hidden_size, n_classes)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.fc1(x)\n",
    "        x = self.gelu(x)\n",
    "        x = self.dropout(x)\n",
    "        x = self.fc2(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "945f03cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.242690Z",
     "iopub.status.busy": "2025-01-04T12:36:52.242467Z",
     "iopub.status.idle": "2025-01-04T12:36:52.247513Z",
     "shell.execute_reply": "2025-01-04T12:36:52.246877Z"
    },
    "papermill": {
     "duration": 0.01148,
     "end_time": "2025-01-04T12:36:52.248723",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.237243",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class VQA_Model(nn.Module):\n",
    "    def __init__(self, visual_encoder, text_encoder, classifier):\n",
    "        super(VQA_Model, self).__init__()\n",
    "        self.visual_encoder = visual_encoder\n",
    "        self.text_encoder = text_encoder\n",
    "        self.classifier = classifier\n",
    "\n",
    "    def forward(self, img, ans):\n",
    "        text_out = self.text_encoder(ans)\n",
    "        img_out = self.visual_encoder(img)\n",
    "        x = torch.concat((img_out, text_out), dim  =1)\n",
    "        x = self.classifier(x)\n",
    "        return x\n",
    "    \n",
    "    def freeze(self, visual=True, textual=True, classifier = False):\n",
    "        if visual:\n",
    "            for n, p in self.visual_encoder.named_parameters():\n",
    "                p.requires_grad = False\n",
    "\n",
    "        if textual:\n",
    "            for n, p in self.visual_encoder.named_parameters():\n",
    "                p.requires_grad = False\n",
    "\n",
    "        if classifier:\n",
    "            for n, p in self.visual_encoder.named_parameters():\n",
    "                p.requires_grad = False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9d1444eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:52.259081Z",
     "iopub.status.busy": "2025-01-04T12:36:52.258857Z",
     "iopub.status.idle": "2025-01-04T12:36:57.065972Z",
     "shell.execute_reply": "2025-01-04T12:36:57.065037Z"
    },
    "papermill": {
     "duration": 4.81415,
     "end_time": "2025-01-04T12:36:57.067620",
     "exception": false,
     "start_time": "2025-01-04T12:36:52.253470",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "91e1050dba9d4b89ac02db0e572f1d48",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/499M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a2fb68fae5074b7e9b810d49a0c05b2d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/69.7k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bbceb5453e5c4c619ae3d2bfce9b7ca6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/346M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of ViTModel were not initialized from the model checkpoint at google/vit-base-patch16-224 and are newly initialized: ['vit.pooler.dense.bias', 'vit.pooler.dense.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    }
   ],
   "source": [
    "n_classes = len(classes)\n",
    "hidden_size = 256\n",
    "dropout_prob = 0.2\n",
    "text_encoder = TextEncoder().to(device)\n",
    "visual_encoder = VisualEncoder().to(device)\n",
    "classifier = Classifier(hidden_size, dropout_prob, n_classes).to(device)\n",
    "model = VQA_Model(visual_encoder, text_encoder, classifier).to(device)\n",
    "model.freeze()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "efb3a98a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:57.080782Z",
     "iopub.status.busy": "2025-01-04T12:36:57.080530Z",
     "iopub.status.idle": "2025-01-04T12:36:57.086654Z",
     "shell.execute_reply": "2025-01-04T12:36:57.085724Z"
    },
    "papermill": {
     "duration": 0.01359,
     "end_time": "2025-01-04T12:36:57.087951",
     "exception": false,
     "start_time": "2025-01-04T12:36:57.074361",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n"
     ]
    }
   ],
   "source": [
    "def eval(model, val_set, criterion, device):\n",
    "    model.eval()\n",
    "    corr = 0\n",
    "    total = 0\n",
    "    losses = []\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for idx, inputs in enumerate(val_set):\n",
    "            \n",
    "            # Move inputs to device\n",
    "            img = inputs['image']\n",
    "            labels = inputs['label']\n",
    "\n",
    "            # Handle optional 'questions' key\n",
    "            questions = inputs['question']\n",
    "\n",
    "            # Forward pass\n",
    "            if questions is not None:\n",
    "                outputs = model(img, questions)\n",
    "            else:\n",
    "                outputs = model(img)\n",
    "\n",
    "            # Calculate loss\n",
    "            loss = criterion(outputs, labels)\n",
    "            losses.append(loss.item())\n",
    "\n",
    "            # Calculate accuracy\n",
    "            _, pred = torch.max(outputs.data, 1)  # Index of max logits\n",
    "            total += labels.size(0)\n",
    "            corr += (pred == labels).sum().item()\n",
    "\n",
    "    # Calculate average loss and accuracy\n",
    "    loss = sum(losses) / len(losses) if losses else 0.0\n",
    "    acc = corr / total if total > 0 else 0.0\n",
    "\n",
    "    return loss, acc\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4991d572",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:57.099971Z",
     "iopub.status.busy": "2025-01-04T12:36:57.099726Z",
     "iopub.status.idle": "2025-01-04T12:36:57.107724Z",
     "shell.execute_reply": "2025-01-04T12:36:57.106884Z"
    },
    "papermill": {
     "duration": 0.015553,
     "end_time": "2025-01-04T12:36:57.108971",
     "exception": false,
     "start_time": "2025-01-04T12:36:57.093418",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "def train(model, train_data, val_data, criterion, optim, scheduler, device, epochs, log_interval = 10):\n",
    "    train_loss = []\n",
    "    val_loss = []\n",
    "    for i in range(epochs):\n",
    "        print(\"-\" * 59)\n",
    "        print(f\"Starting Epoch {i + 1}...\")\n",
    "        epoch_start_time = time.time()\n",
    "\n",
    "        batch_loss = []\n",
    "        model.train()\n",
    "        \n",
    "        for idx, inputs in enumerate(train_data):\n",
    "            image = inputs['image']\n",
    "            questions = inputs['question']\n",
    "            labels = inputs['label']\n",
    "\n",
    "            optim.zero_grad()\n",
    "\n",
    "            out = model(image, questions)\n",
    "            loss = criterion(out, labels)\n",
    "            loss.backward()\n",
    "            optim.step()\n",
    "            batch_loss.append(loss.item())\n",
    "            if idx % log_interval == 0 and idx > 0:\n",
    "                print(f\"| Epoch: {i + 1} | {idx + 1}/{len(train_data)} Batches | Train Loss: {loss.item():.4f} |\")\n",
    "            \n",
    "        train_loss1 = sum(batch_loss)/len(batch_loss)\n",
    "        train_loss.append(train_loss1)\n",
    "        val_loss1, val_acc = eval(\n",
    "            model, val_data, criterion, device\n",
    "        )\n",
    "        val_loss.append(val_loss1)\n",
    "        \n",
    "        print(f\"| Epoch: {i + 1}/{epochs:3d} | Train Loss: {train_loss1:.4f} | Val Loss: {val_loss1:.4f} | Val Accuracy: {val_acc:.2f} | Time: {(time.time() - epoch_start_time):.2f}s |\")\n",
    "        print(f\"Epoch {i + 1} was ran successfully\")\n",
    "        print(\"-\"*59)\n",
    "        \n",
    "        scheduler.step()\n",
    "    return train_loss, val_loss\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a1138cd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:57.121233Z",
     "iopub.status.busy": "2025-01-04T12:36:57.120975Z",
     "iopub.status.idle": "2025-01-04T12:36:57.126930Z",
     "shell.execute_reply": "2025-01-04T12:36:57.126309Z"
    },
    "papermill": {
     "duration": 0.013616,
     "end_time": "2025-01-04T12:36:57.128154",
     "exception": false,
     "start_time": "2025-01-04T12:36:57.114538",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n"
     ]
    }
   ],
   "source": [
    "lr = 1e-3\n",
    "epochs = 50\n",
    "\n",
    "scheduler_step_size = epochs*0.8\n",
    "criterion = nn.CrossEntropyLoss()\n",
    "optim = torch.optim.Adam(\n",
    "    model.parameters(),\n",
    "    lr = lr\n",
    ")\n",
    "\n",
    "scheduler = torch.optim.lr_scheduler.StepLR(\n",
    "    optim,\n",
    "    step_size = scheduler_step_size,\n",
    "    gamma = 0.1\n",
    ")\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "52272dab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T12:36:57.139538Z",
     "iopub.status.busy": "2025-01-04T12:36:57.139309Z",
     "iopub.status.idle": "2025-01-04T16:06:46.490912Z",
     "shell.execute_reply": "2025-01-04T16:06:46.489861Z"
    },
    "papermill": {
     "duration": 12589.371631,
     "end_time": "2025-01-04T16:06:46.505128",
     "exception": false,
     "start_time": "2025-01-04T12:36:57.133497",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----------------------------------------------------------\n",
      "Starting Epoch 1...\n",
      "| Epoch: 1 | 11/31 Batches | Train Loss: 0.6858 |\n",
      "| Epoch: 1 | 21/31 Batches | Train Loss: 0.6949 |\n",
      "| Epoch: 1 | 31/31 Batches | Train Loss: 0.7016 |\n",
      "| Epoch: 1/ 50 | Train Loss: 0.6996 | Val Loss: 0.6855 | Val Accuracy: 0.55 | Time: 292.93s |\n",
      "Epoch 1 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 2...\n",
      "| Epoch: 2 | 11/31 Batches | Train Loss: 0.6692 |\n",
      "| Epoch: 2 | 21/31 Batches | Train Loss: 0.6803 |\n",
      "| Epoch: 2 | 31/31 Batches | Train Loss: 0.6592 |\n",
      "| Epoch: 2/ 50 | Train Loss: 0.6836 | Val Loss: 0.6861 | Val Accuracy: 0.54 | Time: 252.06s |\n",
      "Epoch 2 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 3...\n",
      "| Epoch: 3 | 11/31 Batches | Train Loss: 0.6712 |\n",
      "| Epoch: 3 | 21/31 Batches | Train Loss: 0.6883 |\n",
      "| Epoch: 3 | 31/31 Batches | Train Loss: 0.6755 |\n",
      "| Epoch: 3/ 50 | Train Loss: 0.6757 | Val Loss: 0.6797 | Val Accuracy: 0.58 | Time: 251.02s |\n",
      "Epoch 3 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 4...\n",
      "| Epoch: 4 | 11/31 Batches | Train Loss: 0.6744 |\n",
      "| Epoch: 4 | 21/31 Batches | Train Loss: 0.6806 |\n",
      "| Epoch: 4 | 31/31 Batches | Train Loss: 0.6639 |\n",
      "| Epoch: 4/ 50 | Train Loss: 0.6658 | Val Loss: 0.6924 | Val Accuracy: 0.56 | Time: 253.86s |\n",
      "Epoch 4 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 5...\n",
      "| Epoch: 5 | 11/31 Batches | Train Loss: 0.6722 |\n",
      "| Epoch: 5 | 21/31 Batches | Train Loss: 0.6552 |\n",
      "| Epoch: 5 | 31/31 Batches | Train Loss: 0.6484 |\n",
      "| Epoch: 5/ 50 | Train Loss: 0.6621 | Val Loss: 0.6726 | Val Accuracy: 0.58 | Time: 253.47s |\n",
      "Epoch 5 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 6...\n",
      "| Epoch: 6 | 11/31 Batches | Train Loss: 0.6744 |\n",
      "| Epoch: 6 | 21/31 Batches | Train Loss: 0.6331 |\n",
      "| Epoch: 6 | 31/31 Batches | Train Loss: 0.6833 |\n",
      "| Epoch: 6/ 50 | Train Loss: 0.6516 | Val Loss: 0.6727 | Val Accuracy: 0.59 | Time: 252.90s |\n",
      "Epoch 6 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 7...\n",
      "| Epoch: 7 | 11/31 Batches | Train Loss: 0.6654 |\n",
      "| Epoch: 7 | 21/31 Batches | Train Loss: 0.6368 |\n",
      "| Epoch: 7 | 31/31 Batches | Train Loss: 0.6355 |\n",
      "| Epoch: 7/ 50 | Train Loss: 0.6378 | Val Loss: 0.6811 | Val Accuracy: 0.59 | Time: 251.86s |\n",
      "Epoch 7 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 8...\n",
      "| Epoch: 8 | 11/31 Batches | Train Loss: 0.6116 |\n",
      "| Epoch: 8 | 21/31 Batches | Train Loss: 0.6161 |\n",
      "| Epoch: 8 | 31/31 Batches | Train Loss: 0.6136 |\n",
      "| Epoch: 8/ 50 | Train Loss: 0.6211 | Val Loss: 0.6742 | Val Accuracy: 0.60 | Time: 255.17s |\n",
      "Epoch 8 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 9...\n",
      "| Epoch: 9 | 11/31 Batches | Train Loss: 0.5927 |\n",
      "| Epoch: 9 | 21/31 Batches | Train Loss: 0.6013 |\n",
      "| Epoch: 9 | 31/31 Batches | Train Loss: 0.6045 |\n",
      "| Epoch: 9/ 50 | Train Loss: 0.5990 | Val Loss: 0.6893 | Val Accuracy: 0.60 | Time: 254.47s |\n",
      "Epoch 9 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 10...\n",
      "| Epoch: 10 | 11/31 Batches | Train Loss: 0.5356 |\n",
      "| Epoch: 10 | 21/31 Batches | Train Loss: 0.6223 |\n",
      "| Epoch: 10 | 31/31 Batches | Train Loss: 0.6289 |\n",
      "| Epoch: 10/ 50 | Train Loss: 0.5778 | Val Loss: 0.6792 | Val Accuracy: 0.61 | Time: 251.74s |\n",
      "Epoch 10 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 11...\n",
      "| Epoch: 11 | 11/31 Batches | Train Loss: 0.5282 |\n",
      "| Epoch: 11 | 21/31 Batches | Train Loss: 0.5482 |\n",
      "| Epoch: 11 | 31/31 Batches | Train Loss: 0.5518 |\n",
      "| Epoch: 11/ 50 | Train Loss: 0.5490 | Val Loss: 0.6613 | Val Accuracy: 0.63 | Time: 250.64s |\n",
      "Epoch 11 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 12...\n",
      "| Epoch: 12 | 11/31 Batches | Train Loss: 0.4852 |\n",
      "| Epoch: 12 | 21/31 Batches | Train Loss: 0.5149 |\n",
      "| Epoch: 12 | 31/31 Batches | Train Loss: 0.5331 |\n",
      "| Epoch: 12/ 50 | Train Loss: 0.5235 | Val Loss: 0.6667 | Val Accuracy: 0.64 | Time: 251.32s |\n",
      "Epoch 12 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 13...\n",
      "| Epoch: 13 | 11/31 Batches | Train Loss: 0.4605 |\n",
      "| Epoch: 13 | 21/31 Batches | Train Loss: 0.4744 |\n",
      "| Epoch: 13 | 31/31 Batches | Train Loss: 0.5336 |\n",
      "| Epoch: 13/ 50 | Train Loss: 0.4967 | Val Loss: 0.7126 | Val Accuracy: 0.61 | Time: 250.37s |\n",
      "Epoch 13 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 14...\n",
      "| Epoch: 14 | 11/31 Batches | Train Loss: 0.4144 |\n",
      "| Epoch: 14 | 21/31 Batches | Train Loss: 0.5040 |\n",
      "| Epoch: 14 | 31/31 Batches | Train Loss: 0.4515 |\n",
      "| Epoch: 14/ 50 | Train Loss: 0.4693 | Val Loss: 0.6929 | Val Accuracy: 0.64 | Time: 251.49s |\n",
      "Epoch 14 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 15...\n",
      "| Epoch: 15 | 11/31 Batches | Train Loss: 0.4448 |\n",
      "| Epoch: 15 | 21/31 Batches | Train Loss: 0.4290 |\n",
      "| Epoch: 15 | 31/31 Batches | Train Loss: 0.4354 |\n",
      "| Epoch: 15/ 50 | Train Loss: 0.4430 | Val Loss: 0.7224 | Val Accuracy: 0.64 | Time: 251.53s |\n",
      "Epoch 15 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 16...\n",
      "| Epoch: 16 | 11/31 Batches | Train Loss: 0.4243 |\n",
      "| Epoch: 16 | 21/31 Batches | Train Loss: 0.3991 |\n",
      "| Epoch: 16 | 31/31 Batches | Train Loss: 0.3835 |\n",
      "| Epoch: 16/ 50 | Train Loss: 0.4079 | Val Loss: 0.7084 | Val Accuracy: 0.64 | Time: 253.08s |\n",
      "Epoch 16 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 17...\n",
      "| Epoch: 17 | 11/31 Batches | Train Loss: 0.3953 |\n",
      "| Epoch: 17 | 21/31 Batches | Train Loss: 0.4387 |\n",
      "| Epoch: 17 | 31/31 Batches | Train Loss: 0.4046 |\n",
      "| Epoch: 17/ 50 | Train Loss: 0.3885 | Val Loss: 0.7019 | Val Accuracy: 0.65 | Time: 251.25s |\n",
      "Epoch 17 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 18...\n",
      "| Epoch: 18 | 11/31 Batches | Train Loss: 0.3465 |\n",
      "| Epoch: 18 | 21/31 Batches | Train Loss: 0.4314 |\n",
      "| Epoch: 18 | 31/31 Batches | Train Loss: 0.3541 |\n",
      "| Epoch: 18/ 50 | Train Loss: 0.3645 | Val Loss: 0.7333 | Val Accuracy: 0.64 | Time: 250.01s |\n",
      "Epoch 18 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 19...\n",
      "| Epoch: 19 | 11/31 Batches | Train Loss: 0.3339 |\n",
      "| Epoch: 19 | 21/31 Batches | Train Loss: 0.3552 |\n",
      "| Epoch: 19 | 31/31 Batches | Train Loss: 0.3826 |\n",
      "| Epoch: 19/ 50 | Train Loss: 0.3466 | Val Loss: 0.7387 | Val Accuracy: 0.65 | Time: 248.70s |\n",
      "Epoch 19 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 20...\n",
      "| Epoch: 20 | 11/31 Batches | Train Loss: 0.2981 |\n",
      "| Epoch: 20 | 21/31 Batches | Train Loss: 0.3726 |\n",
      "| Epoch: 20 | 31/31 Batches | Train Loss: 0.3370 |\n",
      "| Epoch: 20/ 50 | Train Loss: 0.3239 | Val Loss: 0.7921 | Val Accuracy: 0.64 | Time: 249.71s |\n",
      "Epoch 20 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 21...\n",
      "| Epoch: 21 | 11/31 Batches | Train Loss: 0.3320 |\n",
      "| Epoch: 21 | 21/31 Batches | Train Loss: 0.3155 |\n",
      "| Epoch: 21 | 31/31 Batches | Train Loss: 0.3135 |\n",
      "| Epoch: 21/ 50 | Train Loss: 0.3142 | Val Loss: 0.7871 | Val Accuracy: 0.66 | Time: 249.74s |\n",
      "Epoch 21 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 22...\n",
      "| Epoch: 22 | 11/31 Batches | Train Loss: 0.2638 |\n",
      "| Epoch: 22 | 21/31 Batches | Train Loss: 0.3081 |\n",
      "| Epoch: 22 | 31/31 Batches | Train Loss: 0.3394 |\n",
      "| Epoch: 22/ 50 | Train Loss: 0.3038 | Val Loss: 0.7688 | Val Accuracy: 0.66 | Time: 249.80s |\n",
      "Epoch 22 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 23...\n",
      "| Epoch: 23 | 11/31 Batches | Train Loss: 0.2814 |\n",
      "| Epoch: 23 | 21/31 Batches | Train Loss: 0.2736 |\n",
      "| Epoch: 23 | 31/31 Batches | Train Loss: 0.3706 |\n",
      "| Epoch: 23/ 50 | Train Loss: 0.2942 | Val Loss: 0.7966 | Val Accuracy: 0.66 | Time: 249.54s |\n",
      "Epoch 23 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 24...\n",
      "| Epoch: 24 | 11/31 Batches | Train Loss: 0.2610 |\n",
      "| Epoch: 24 | 21/31 Batches | Train Loss: 0.2262 |\n",
      "| Epoch: 24 | 31/31 Batches | Train Loss: 0.3038 |\n",
      "| Epoch: 24/ 50 | Train Loss: 0.2846 | Val Loss: 0.7806 | Val Accuracy: 0.66 | Time: 250.15s |\n",
      "Epoch 24 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 25...\n",
      "| Epoch: 25 | 11/31 Batches | Train Loss: 0.2280 |\n",
      "| Epoch: 25 | 21/31 Batches | Train Loss: 0.2769 |\n",
      "| Epoch: 25 | 31/31 Batches | Train Loss: 0.3502 |\n",
      "| Epoch: 25/ 50 | Train Loss: 0.2697 | Val Loss: 0.7964 | Val Accuracy: 0.67 | Time: 249.14s |\n",
      "Epoch 25 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 26...\n",
      "| Epoch: 26 | 11/31 Batches | Train Loss: 0.2368 |\n",
      "| Epoch: 26 | 21/31 Batches | Train Loss: 0.2572 |\n",
      "| Epoch: 26 | 31/31 Batches | Train Loss: 0.3231 |\n",
      "| Epoch: 26/ 50 | Train Loss: 0.2593 | Val Loss: 0.7848 | Val Accuracy: 0.66 | Time: 251.97s |\n",
      "Epoch 26 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 27...\n",
      "| Epoch: 27 | 11/31 Batches | Train Loss: 0.2875 |\n",
      "| Epoch: 27 | 21/31 Batches | Train Loss: 0.2759 |\n",
      "| Epoch: 27 | 31/31 Batches | Train Loss: 0.2663 |\n",
      "| Epoch: 27/ 50 | Train Loss: 0.2512 | Val Loss: 0.7946 | Val Accuracy: 0.68 | Time: 250.05s |\n",
      "Epoch 27 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 28...\n",
      "| Epoch: 28 | 11/31 Batches | Train Loss: 0.2937 |\n",
      "| Epoch: 28 | 21/31 Batches | Train Loss: 0.2498 |\n",
      "| Epoch: 28 | 31/31 Batches | Train Loss: 0.2840 |\n",
      "| Epoch: 28/ 50 | Train Loss: 0.2451 | Val Loss: 0.8375 | Val Accuracy: 0.66 | Time: 250.04s |\n",
      "Epoch 28 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 29...\n",
      "| Epoch: 29 | 11/31 Batches | Train Loss: 0.2611 |\n",
      "| Epoch: 29 | 21/31 Batches | Train Loss: 0.2303 |\n",
      "| Epoch: 29 | 31/31 Batches | Train Loss: 0.2547 |\n",
      "| Epoch: 29/ 50 | Train Loss: 0.2425 | Val Loss: 0.8143 | Val Accuracy: 0.67 | Time: 250.33s |\n",
      "Epoch 29 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 30...\n",
      "| Epoch: 30 | 11/31 Batches | Train Loss: 0.2485 |\n",
      "| Epoch: 30 | 21/31 Batches | Train Loss: 0.2098 |\n",
      "| Epoch: 30 | 31/31 Batches | Train Loss: 0.2711 |\n",
      "| Epoch: 30/ 50 | Train Loss: 0.2345 | Val Loss: 0.9081 | Val Accuracy: 0.65 | Time: 249.44s |\n",
      "Epoch 30 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 31...\n",
      "| Epoch: 31 | 11/31 Batches | Train Loss: 0.1812 |\n",
      "| Epoch: 31 | 21/31 Batches | Train Loss: 0.2220 |\n",
      "| Epoch: 31 | 31/31 Batches | Train Loss: 0.2934 |\n",
      "| Epoch: 31/ 50 | Train Loss: 0.2310 | Val Loss: 0.8625 | Val Accuracy: 0.66 | Time: 248.77s |\n",
      "Epoch 31 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 32...\n",
      "| Epoch: 32 | 11/31 Batches | Train Loss: 0.1723 |\n",
      "| Epoch: 32 | 21/31 Batches | Train Loss: 0.2216 |\n",
      "| Epoch: 32 | 31/31 Batches | Train Loss: 0.2380 |\n",
      "| Epoch: 32/ 50 | Train Loss: 0.2241 | Val Loss: 0.8259 | Val Accuracy: 0.66 | Time: 250.84s |\n",
      "Epoch 32 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 33...\n",
      "| Epoch: 33 | 11/31 Batches | Train Loss: 0.1972 |\n",
      "| Epoch: 33 | 21/31 Batches | Train Loss: 0.2094 |\n",
      "| Epoch: 33 | 31/31 Batches | Train Loss: 0.2002 |\n",
      "| Epoch: 33/ 50 | Train Loss: 0.2214 | Val Loss: 0.8429 | Val Accuracy: 0.67 | Time: 249.77s |\n",
      "Epoch 33 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 34...\n",
      "| Epoch: 34 | 11/31 Batches | Train Loss: 0.2001 |\n",
      "| Epoch: 34 | 21/31 Batches | Train Loss: 0.2018 |\n",
      "| Epoch: 34 | 31/31 Batches | Train Loss: 0.2290 |\n",
      "| Epoch: 34/ 50 | Train Loss: 0.2141 | Val Loss: 0.8541 | Val Accuracy: 0.67 | Time: 248.95s |\n",
      "Epoch 34 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 35...\n",
      "| Epoch: 35 | 11/31 Batches | Train Loss: 0.1988 |\n",
      "| Epoch: 35 | 21/31 Batches | Train Loss: 0.2350 |\n",
      "| Epoch: 35 | 31/31 Batches | Train Loss: 0.1677 |\n",
      "| Epoch: 35/ 50 | Train Loss: 0.2088 | Val Loss: 0.8820 | Val Accuracy: 0.67 | Time: 249.44s |\n",
      "Epoch 35 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 36...\n",
      "| Epoch: 36 | 11/31 Batches | Train Loss: 0.2063 |\n",
      "| Epoch: 36 | 21/31 Batches | Train Loss: 0.2426 |\n",
      "| Epoch: 36 | 31/31 Batches | Train Loss: 0.1968 |\n",
      "| Epoch: 36/ 50 | Train Loss: 0.2079 | Val Loss: 0.8702 | Val Accuracy: 0.68 | Time: 249.93s |\n",
      "Epoch 36 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 37...\n",
      "| Epoch: 37 | 11/31 Batches | Train Loss: 0.2780 |\n",
      "| Epoch: 37 | 21/31 Batches | Train Loss: 0.2137 |\n",
      "| Epoch: 37 | 31/31 Batches | Train Loss: 0.2094 |\n",
      "| Epoch: 37/ 50 | Train Loss: 0.2065 | Val Loss: 0.8849 | Val Accuracy: 0.68 | Time: 250.42s |\n",
      "Epoch 37 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 38...\n",
      "| Epoch: 38 | 11/31 Batches | Train Loss: 0.2152 |\n",
      "| Epoch: 38 | 21/31 Batches | Train Loss: 0.1789 |\n",
      "| Epoch: 38 | 31/31 Batches | Train Loss: 0.1828 |\n",
      "| Epoch: 38/ 50 | Train Loss: 0.1973 | Val Loss: 0.8857 | Val Accuracy: 0.67 | Time: 249.61s |\n",
      "Epoch 38 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 39...\n",
      "| Epoch: 39 | 11/31 Batches | Train Loss: 0.2162 |\n",
      "| Epoch: 39 | 21/31 Batches | Train Loss: 0.1910 |\n",
      "| Epoch: 39 | 31/31 Batches | Train Loss: 0.2360 |\n",
      "| Epoch: 39/ 50 | Train Loss: 0.1998 | Val Loss: 0.9246 | Val Accuracy: 0.66 | Time: 250.27s |\n",
      "Epoch 39 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 40...\n",
      "| Epoch: 40 | 11/31 Batches | Train Loss: 0.1640 |\n",
      "| Epoch: 40 | 21/31 Batches | Train Loss: 0.1430 |\n",
      "| Epoch: 40 | 31/31 Batches | Train Loss: 0.1850 |\n",
      "| Epoch: 40/ 50 | Train Loss: 0.1984 | Val Loss: 0.9061 | Val Accuracy: 0.67 | Time: 249.90s |\n",
      "Epoch 40 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 41...\n",
      "| Epoch: 41 | 11/31 Batches | Train Loss: 0.1986 |\n",
      "| Epoch: 41 | 21/31 Batches | Train Loss: 0.1874 |\n",
      "| Epoch: 41 | 31/31 Batches | Train Loss: 0.1869 |\n",
      "| Epoch: 41/ 50 | Train Loss: 0.1744 | Val Loss: 0.8978 | Val Accuracy: 0.68 | Time: 249.65s |\n",
      "Epoch 41 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 42...\n",
      "| Epoch: 42 | 11/31 Batches | Train Loss: 0.2119 |\n",
      "| Epoch: 42 | 21/31 Batches | Train Loss: 0.1739 |\n",
      "| Epoch: 42 | 31/31 Batches | Train Loss: 0.2141 |\n",
      "| Epoch: 42/ 50 | Train Loss: 0.1687 | Val Loss: 0.9096 | Val Accuracy: 0.68 | Time: 250.29s |\n",
      "Epoch 42 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 43...\n",
      "| Epoch: 43 | 11/31 Batches | Train Loss: 0.2248 |\n",
      "| Epoch: 43 | 21/31 Batches | Train Loss: 0.1627 |\n",
      "| Epoch: 43 | 31/31 Batches | Train Loss: 0.1538 |\n",
      "| Epoch: 43/ 50 | Train Loss: 0.1636 | Val Loss: 0.9203 | Val Accuracy: 0.68 | Time: 250.88s |\n",
      "Epoch 43 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 44...\n",
      "| Epoch: 44 | 11/31 Batches | Train Loss: 0.1657 |\n",
      "| Epoch: 44 | 21/31 Batches | Train Loss: 0.1928 |\n",
      "| Epoch: 44 | 31/31 Batches | Train Loss: 0.1384 |\n",
      "| Epoch: 44/ 50 | Train Loss: 0.1627 | Val Loss: 0.9242 | Val Accuracy: 0.68 | Time: 249.91s |\n",
      "Epoch 44 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 45...\n",
      "| Epoch: 45 | 11/31 Batches | Train Loss: 0.1370 |\n",
      "| Epoch: 45 | 21/31 Batches | Train Loss: 0.1532 |\n",
      "| Epoch: 45 | 31/31 Batches | Train Loss: 0.1505 |\n",
      "| Epoch: 45/ 50 | Train Loss: 0.1639 | Val Loss: 0.9285 | Val Accuracy: 0.67 | Time: 253.08s |\n",
      "Epoch 45 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 46...\n",
      "| Epoch: 46 | 11/31 Batches | Train Loss: 0.1645 |\n",
      "| Epoch: 46 | 21/31 Batches | Train Loss: 0.1462 |\n",
      "| Epoch: 46 | 31/31 Batches | Train Loss: 0.1855 |\n",
      "| Epoch: 46/ 50 | Train Loss: 0.1606 | Val Loss: 0.9305 | Val Accuracy: 0.67 | Time: 254.35s |\n",
      "Epoch 46 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 47...\n",
      "| Epoch: 47 | 11/31 Batches | Train Loss: 0.1967 |\n",
      "| Epoch: 47 | 21/31 Batches | Train Loss: 0.1382 |\n",
      "| Epoch: 47 | 31/31 Batches | Train Loss: 0.1826 |\n",
      "| Epoch: 47/ 50 | Train Loss: 0.1622 | Val Loss: 0.9283 | Val Accuracy: 0.67 | Time: 252.11s |\n",
      "Epoch 47 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 48...\n",
      "| Epoch: 48 | 11/31 Batches | Train Loss: 0.1495 |\n",
      "| Epoch: 48 | 21/31 Batches | Train Loss: 0.1564 |\n",
      "| Epoch: 48 | 31/31 Batches | Train Loss: 0.1278 |\n",
      "| Epoch: 48/ 50 | Train Loss: 0.1586 | Val Loss: 0.9303 | Val Accuracy: 0.68 | Time: 251.18s |\n",
      "Epoch 48 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 49...\n",
      "| Epoch: 49 | 11/31 Batches | Train Loss: 0.1393 |\n",
      "| Epoch: 49 | 21/31 Batches | Train Loss: 0.1442 |\n",
      "| Epoch: 49 | 31/31 Batches | Train Loss: 0.1404 |\n",
      "| Epoch: 49/ 50 | Train Loss: 0.1587 | Val Loss: 0.9324 | Val Accuracy: 0.67 | Time: 253.05s |\n",
      "Epoch 49 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "-----------------------------------------------------------\n",
      "Starting Epoch 50...\n",
      "| Epoch: 50 | 11/31 Batches | Train Loss: 0.0911 |\n",
      "| Epoch: 50 | 21/31 Batches | Train Loss: 0.1404 |\n",
      "| Epoch: 50 | 31/31 Batches | Train Loss: 0.1030 |\n",
      "| Epoch: 50/ 50 | Train Loss: 0.1565 | Val Loss: 0.9385 | Val Accuracy: 0.67 | Time: 249.15s |\n",
      "Epoch 50 was ran successfully\n",
      "-----------------------------------------------------------\n",
      "Done!\n"
     ]
    }
   ],
   "source": [
    "train_loss, val_loss = train(model,\n",
    "                            train_loader,\n",
    "                            val_loader,\n",
    "                            criterion,\n",
    "                            optim,\n",
    "                            scheduler,\n",
    "                            device,\n",
    "                            epochs)\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e17f59c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T16:06:46.533714Z",
     "iopub.status.busy": "2025-01-04T16:06:46.533459Z",
     "iopub.status.idle": "2025-01-04T16:08:10.147454Z",
     "shell.execute_reply": "2025-01-04T16:08:10.146356Z"
    },
    "papermill": {
     "duration": 83.643593,
     "end_time": "2025-01-04T16:08:10.162600",
     "exception": false,
     "start_time": "2025-01-04T16:06:46.519007",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done!\n"
     ]
    }
   ],
   "source": [
    "val_loss, val_acc = eval(model,\n",
    "                        val_loader,\n",
    "                        criterion,\n",
    "                        device)\n",
    "\n",
    "test_loss, test_acc = eval(\n",
    "    model,\n",
    "    test_loader,\n",
    "    criterion,\n",
    "    device\n",
    ")\n",
    "print(\"Done!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "aa92c3ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-04T16:08:10.191270Z",
     "iopub.status.busy": "2025-01-04T16:08:10.191005Z",
     "iopub.status.idle": "2025-01-04T16:08:10.194819Z",
     "shell.execute_reply": "2025-01-04T16:08:10.194097Z"
    },
    "papermill": {
     "duration": 0.019412,
     "end_time": "2025-01-04T16:08:10.196031",
     "exception": false,
     "start_time": "2025-01-04T16:08:10.176619",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Val Accuracy: 0.6716188524590164\n",
      "Test Accuracy: 0.6503461918892186\n",
      "Done!\n"
     ]
    }
   ],
   "source": [
    "print(f\"Val Accuracy: {val_acc}\")\n",
    "print(f\"Test Accuracy: {test_acc}\")\n",
    "print(\"Done!\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 6421612,
     "sourceId": 10367779,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30822,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12715.325514,
   "end_time": "2025-01-04T16:08:13.439285",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-04T12:36:18.113771",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "08e4a95873b241db836ef1f854e19dc9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "099b1bcf8f844156b4dbc7d99021b519": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0a2b53835c8e489aa3f3e10c6fec8cc4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a756987295ab4a2c89d0a7a0d7722b01",
       "placeholder": "​",
       "style": "IPY_MODEL_65f09a3629c846f1856398738ddbb2a4",
       "tabbable": null,
       "tooltip": null,
       "value": " 499M/499M [00:02&lt;00:00, 239MB/s]"
      }
     },
     "0e36e6f1a2f448f3b426b1291d69d4b5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7ac88f315e8f430e995a676b56c62a09",
       "placeholder": "​",
       "style": "IPY_MODEL_602860971c844342a446fd41f09fb118",
       "tabbable": null,
       "tooltip": null,
       "value": "merges.txt: 100%"
      }
     },
     "12aab6c28c6d427d9e686b42d11faea1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "146efd3eaa9c406b9472cb4d530f4724": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "14b2e5003e8f4be1ae0d824a99872035": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "178038c207f94e93bc9842225823dcdc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "18dbb3e863464d569603f6c7533a7a99": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "198cad992224427d815d86cfa4eb46ca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1ab82d4c3bb14efab49a977c2ed70a31": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1d3fa986dcd848a690d9473d6be32a12": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1fc4f6661834449fa9f4f2ffe15e7de2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ceabd327b2954f4786931f67440adf67",
       "placeholder": "​",
       "style": "IPY_MODEL_1d3fa986dcd848a690d9473d6be32a12",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "2024c31911854e2f8c735125dd6362f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dd36f43beb394cba962f3fdf2870dc81",
       "max": 1355863.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f0c4426c9cc6467baca247e90cb69891",
       "tabbable": null,
       "tooltip": null,
       "value": 1355863.0
      }
     },
     "22cf161f6631424ca4cf3af0932a1f1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2793812db9a14a52a6c6f04d82d8b1e7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_146efd3eaa9c406b9472cb4d530f4724",
       "placeholder": "​",
       "style": "IPY_MODEL_08e4a95873b241db836ef1f854e19dc9",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "29d6aea8cd104c4294e89d29ded0f23d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2d5ddb5959b045d3bf54093c27fded46": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_43f4a126a5924f34bf6d63927b69aa3c",
        "IPY_MODEL_dbb33b4a84bf44c79f942b003455be4f",
        "IPY_MODEL_b88e8ae8395947e6884cbb25a07a5744"
       ],
       "layout": "IPY_MODEL_3459d5f931e341cc8092919abe1bdc3c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2dd4ec9e7b48424cbedd171917db4091": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2e1431aa9fc24a2cb8d11bc3b77c87f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3459d5f931e341cc8092919abe1bdc3c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "35ed04351f2841e0bb5c0b99551520ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_74aa78739db04d1691b1cdf3b0bbb29b",
       "max": 346293852.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_1ab82d4c3bb14efab49a977c2ed70a31",
       "tabbable": null,
       "tooltip": null,
       "value": 346293852.0
      }
     },
     "377902929241445f902a01b88a890379": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3a977a64c58444fab5440a490dbf05d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8910f278a55c4f88a53a48902e35d4ef",
       "max": 25.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_72fd104025814ec2b34ccb6ee519fe77",
       "tabbable": null,
       "tooltip": null,
       "value": 25.0
      }
     },
     "3bf9a6a3582d456090729ac84ed8c55a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_667c2a9275b741e38fee7be2308ad073",
        "IPY_MODEL_2024c31911854e2f8c735125dd6362f1",
        "IPY_MODEL_a6caf938dd124c2487785d918ca6443b"
       ],
       "layout": "IPY_MODEL_b6b3e18f1d854145a9598b85fc01bd07",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4161e006be8c413aa0367743b60eec8d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4344d083f1544fb8bc866aa31a164fbb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f110d32ef8424a78bfbd8619ffb1e9c7",
        "IPY_MODEL_e193a98f3b2446bbb7fa33973e697792",
        "IPY_MODEL_d2efb7a1efc640eb8971a2d876fc661b"
       ],
       "layout": "IPY_MODEL_14b2e5003e8f4be1ae0d824a99872035",
       "tabbable": null,
       "tooltip": null
      }
     },
     "43f4a126a5924f34bf6d63927b69aa3c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2e1431aa9fc24a2cb8d11bc3b77c87f8",
       "placeholder": "​",
       "style": "IPY_MODEL_12aab6c28c6d427d9e686b42d11faea1",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: 100%"
      }
     },
     "52681c55a6c74ee38cd5a13376974d2c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "55038069976f48108b46be14256322e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "55cda538c7da443bac9adadcd0b453aa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "575267e6284f4bf59c1ae98fea672f70": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6399a4b05538488abac8fe64a2cb89c4",
        "IPY_MODEL_a9fef754c0954c8ea079c586a50d30b4",
        "IPY_MODEL_d520541ee6ee424b973f99dff75b1ecc"
       ],
       "layout": "IPY_MODEL_a6ea5c8e686c4463ad390886cd8686b9",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5a17b9c3811d4f7bbea1d555bf242f4d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5dda568e9aec41589bf4029ad0d94ada": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e670eb9ed124f6eb776b4f32c121e4a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_29d6aea8cd104c4294e89d29ded0f23d",
       "placeholder": "​",
       "style": "IPY_MODEL_5a17b9c3811d4f7bbea1d555bf242f4d",
       "tabbable": null,
       "tooltip": null,
       "value": " 25.0/25.0 [00:00&lt;00:00, 2.62kB/s]"
      }
     },
     "602860971c844342a446fd41f09fb118": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "60dc2a0a83ff49cb9db37c9f9630f7ae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6399a4b05538488abac8fe64a2cb89c4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e87f7619280748a0abe7311fed8a65f5",
       "placeholder": "​",
       "style": "IPY_MODEL_e670b48efa9f491fa4ecfea719548e92",
       "tabbable": null,
       "tooltip": null,
       "value": "preprocessor_config.json: 100%"
      }
     },
     "63c1249f655346f0bedbcea0c2135f9a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "65f09a3629c846f1856398738ddbb2a4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "667c2a9275b741e38fee7be2308ad073": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b4463286f1424928bd2a768338e336be",
       "placeholder": "​",
       "style": "IPY_MODEL_c52359e35f3444f495029aace2a46912",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer.json: 100%"
      }
     },
     "700b05528a42459495f58cc0aee56095": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_aee45c8c5d15496ba72fdf07255d84bf",
       "placeholder": "​",
       "style": "IPY_MODEL_63c1249f655346f0bedbcea0c2135f9a",
       "tabbable": null,
       "tooltip": null,
       "value": " 69.7k/69.7k [00:00&lt;00:00, 6.19MB/s]"
      }
     },
     "726379764cd440349cb0a91322a80547": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "72fd104025814ec2b34ccb6ee519fe77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "74aa78739db04d1691b1cdf3b0bbb29b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7ac88f315e8f430e995a676b56c62a09": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "80b956b500b847c3abca7318116d6489": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "86d7667fe8734b3fabca8825812267e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4161e006be8c413aa0367743b60eec8d",
       "placeholder": "​",
       "style": "IPY_MODEL_22cf161f6631424ca4cf3af0932a1f1d",
       "tabbable": null,
       "tooltip": null,
       "value": " 456k/456k [00:00&lt;00:00, 27.0MB/s]"
      }
     },
     "8757e39a3a9043039730b902ce8f942e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_18dbb3e863464d569603f6c7533a7a99",
       "max": 69665.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2dd4ec9e7b48424cbedd171917db4091",
       "tabbable": null,
       "tooltip": null,
       "value": 69665.0
      }
     },
     "8910f278a55c4f88a53a48902e35d4ef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "89cf6b14673645a3b29aa38aeecc1d9f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "89e51ada4e5d49b2b0c8b4441080aa99": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "90f9cd29b0f0495d95f539550eac8cc8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "91e1050dba9d4b89ac02db0e572f1d48": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bc3ab5c445ac4d32967973082af535e8",
        "IPY_MODEL_df9a756b0a6e46018d6c31fbf288a6ee",
        "IPY_MODEL_0a2b53835c8e489aa3f3e10c6fec8cc4"
       ],
       "layout": "IPY_MODEL_93c4083bfc4b4cf9a298d1535cf54ef8",
       "tabbable": null,
       "tooltip": null
      }
     },
     "93c4083bfc4b4cf9a298d1535cf54ef8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "97faf708bede45228e33bd6f44f77b7a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2793812db9a14a52a6c6f04d82d8b1e7",
        "IPY_MODEL_3a977a64c58444fab5440a490dbf05d6",
        "IPY_MODEL_5e670eb9ed124f6eb776b4f32c121e4a"
       ],
       "layout": "IPY_MODEL_991ea559a92f45ce9c13ca65962fe8ac",
       "tabbable": null,
       "tooltip": null
      }
     },
     "991ea559a92f45ce9c13ca65962fe8ac": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9bd63554c986441c882fe3f68567e7a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9d7eb52d759a4a88a1fe0c992d1f052e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a2fb68fae5074b7e9b810d49a0c05b2d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1fc4f6661834449fa9f4f2ffe15e7de2",
        "IPY_MODEL_8757e39a3a9043039730b902ce8f942e",
        "IPY_MODEL_700b05528a42459495f58cc0aee56095"
       ],
       "layout": "IPY_MODEL_c7b7ea461b0345a4a23c328e0276138f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a67ad6fbdeee4dbea8779e02f8d3c1c0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_af9433c80c26410286eab6812c6f5be7",
       "placeholder": "​",
       "style": "IPY_MODEL_55cda538c7da443bac9adadcd0b453aa",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "a6caf938dd124c2487785d918ca6443b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ecce654a79b84013b0c97ea18baeea10",
       "placeholder": "​",
       "style": "IPY_MODEL_c0a0f642653c43f28cbb2fa0c5ea9962",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.36M/1.36M [00:00&lt;00:00, 54.7MB/s]"
      }
     },
     "a6ea5c8e686c4463ad390886cd8686b9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a756987295ab4a2c89d0a7a0d7722b01": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a9fef754c0954c8ea079c586a50d30b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_60dc2a0a83ff49cb9db37c9f9630f7ae",
       "max": 160.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_55038069976f48108b46be14256322e2",
       "tabbable": null,
       "tooltip": null,
       "value": 160.0
      }
     },
     "ae88b48e1b974d06b52acce2eb856fbb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "aee45c8c5d15496ba72fdf07255d84bf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "af9433c80c26410286eab6812c6f5be7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b208a3154b3d49e6b5e9c127e5a4b955": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9bd63554c986441c882fe3f68567e7a4",
       "placeholder": "​",
       "style": "IPY_MODEL_80b956b500b847c3abca7318116d6489",
       "tabbable": null,
       "tooltip": null,
       "value": " 346M/346M [00:01&lt;00:00, 249MB/s]"
      }
     },
     "b4463286f1424928bd2a768338e336be": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b6b3e18f1d854145a9598b85fc01bd07": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b721d25e0afa4ee2b1335ce2e5f4c04a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b88e8ae8395947e6884cbb25a07a5744": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5dda568e9aec41589bf4029ad0d94ada",
       "placeholder": "​",
       "style": "IPY_MODEL_d42b5a9b5067495f99304a0b28b92fe2",
       "tabbable": null,
       "tooltip": null,
       "value": " 899k/899k [00:00&lt;00:00, 13.3MB/s]"
      }
     },
     "bbceb5453e5c4c619ae3d2bfce9b7ca6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a67ad6fbdeee4dbea8779e02f8d3c1c0",
        "IPY_MODEL_35ed04351f2841e0bb5c0b99551520ed",
        "IPY_MODEL_b208a3154b3d49e6b5e9c127e5a4b955"
       ],
       "layout": "IPY_MODEL_ae88b48e1b974d06b52acce2eb856fbb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bc3ab5c445ac4d32967973082af535e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_377902929241445f902a01b88a890379",
       "placeholder": "​",
       "style": "IPY_MODEL_e8ab4d69e3354b53aedbeb25e2a72045",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "c0a0f642653c43f28cbb2fa0c5ea9962": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c1b6666d1f324ebc9b3413f3b2240e93": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0e36e6f1a2f448f3b426b1291d69d4b5",
        "IPY_MODEL_e91b727cf83942208fa258d7da1ac4f6",
        "IPY_MODEL_86d7667fe8734b3fabca8825812267e4"
       ],
       "layout": "IPY_MODEL_9d7eb52d759a4a88a1fe0c992d1f052e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c52359e35f3444f495029aace2a46912": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c7b7ea461b0345a4a23c328e0276138f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ceabd327b2954f4786931f67440adf67": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d2efb7a1efc640eb8971a2d876fc661b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_726379764cd440349cb0a91322a80547",
       "placeholder": "​",
       "style": "IPY_MODEL_b721d25e0afa4ee2b1335ce2e5f4c04a",
       "tabbable": null,
       "tooltip": null,
       "value": " 481/481 [00:00&lt;00:00, 47.7kB/s]"
      }
     },
     "d42b5a9b5067495f99304a0b28b92fe2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d520541ee6ee424b973f99dff75b1ecc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dfb6b7fb871b43c7a8b4587c2bc1e001",
       "placeholder": "​",
       "style": "IPY_MODEL_178038c207f94e93bc9842225823dcdc",
       "tabbable": null,
       "tooltip": null,
       "value": " 160/160 [00:00&lt;00:00, 15.5kB/s]"
      }
     },
     "da5e72025d114863ae67ee47463d6140": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "dbb33b4a84bf44c79f942b003455be4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_89cf6b14673645a3b29aa38aeecc1d9f",
       "max": 898823.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_89e51ada4e5d49b2b0c8b4441080aa99",
       "tabbable": null,
       "tooltip": null,
       "value": 898823.0
      }
     },
     "dd36f43beb394cba962f3fdf2870dc81": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "df9a756b0a6e46018d6c31fbf288a6ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_198cad992224427d815d86cfa4eb46ca",
       "max": 498818054.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_099b1bcf8f844156b4dbc7d99021b519",
       "tabbable": null,
       "tooltip": null,
       "value": 498818054.0
      }
     },
     "dfb6b7fb871b43c7a8b4587c2bc1e001": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e193a98f3b2446bbb7fa33973e697792": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ee3cc67d2d464abaa8cfc9857531f2f2",
       "max": 481.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e839e2236a2446b7b6f8f2eac0564840",
       "tabbable": null,
       "tooltip": null,
       "value": 481.0
      }
     },
     "e670b48efa9f491fa4ecfea719548e92": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e839e2236a2446b7b6f8f2eac0564840": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e87f7619280748a0abe7311fed8a65f5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e8ab4d69e3354b53aedbeb25e2a72045": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e91b727cf83942208fa258d7da1ac4f6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f850a32e69cc462c89e38a35cb96706d",
       "max": 456318.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_da5e72025d114863ae67ee47463d6140",
       "tabbable": null,
       "tooltip": null,
       "value": 456318.0
      }
     },
     "ecce654a79b84013b0c97ea18baeea10": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ee3cc67d2d464abaa8cfc9857531f2f2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f0c4426c9cc6467baca247e90cb69891": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f110d32ef8424a78bfbd8619ffb1e9c7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_52681c55a6c74ee38cd5a13376974d2c",
       "placeholder": "​",
       "style": "IPY_MODEL_90f9cd29b0f0495d95f539550eac8cc8",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "f850a32e69cc462c89e38a35cb96706d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
